#!/bin/bash
set -e

if [[ -n "${PFB_DEBUG}" ]]; then
    set -x
fi

if [[ -n "${GIT_COMMIT}" ]]; then
    GIT_COMMIT="${GIT_COMMIT:0:7}"
else
    GIT_COMMIT="$(git rev-parse --short HEAD)"
fi

DIR="$(dirname "$0")"

function usage() {
    echo -n \
         "Usage: $(basename "$0")
Build application for staging or a release.
"
}

if [ "${BASH_SOURCE[0]}" = "${0}" ]; then
    if [ "${1:-}" = "--help" ]; then
        usage
    else
        echo "Building container image"
        # Make sure Tilegarden config files exist
        touch "${DIR}/../src/tilegarden/.env" "${DIR}/../src/tilegarden/claudia.json"
        GIT_COMMIT="${GIT_COMMIT}" docker compose \
                  -f "${DIR}/../docker-compose.yml" \
                  -f "${DIR}/../docker-compose.test.yml" \
                  build database django angularjs analysis

        echo "Running tests"
        "${DIR}/test"
        echo "All tests pass!"

        # Copy static site from angularjs container to local nginx srv directory
        echo "Copying angular site to nginx..."
        pushd "${DIR}/../src/nginx"
        docker run --rm -i -v "${PWD}/srv/dist:/static-export/dist" pfb-angularjs \
               rsync -rlptDv --delete --exclude .gitkeep \
                 /opt/pfb/angularjs/dist /static-export/
        popd

        echo "Running Django collectstatic..."
        GIT_COMMIT="${GIT_COMMIT}" \
        docker compose \
            -f docker-compose.yml \
            -f docker-compose.test.yml \
            run --rm --no-deps --entrypoint "./manage.py" \
            django collectstatic --noinput

        echo "Building nginx image"
        GIT_COMMIT="${GIT_COMMIT}" docker compose \
                  -f "${DIR}/../docker-compose.yml" \
                  -f "${DIR}/../docker-compose.test.yml" \
                  build nginx
    fi
fi
